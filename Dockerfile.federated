# Multi-stage build for federated Formul8 deployment
FROM node:20-alpine AS builder

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig.json ./
COPY vite.config.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./
COPY components.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY client/ ./client/
COPY server/ ./server/
COPY shared/ ./shared/

# Build the application
RUN npm run build

# Production stage
FROM node:20-alpine AS production

WORKDIR /app

# Install production dependencies
COPY package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copy built application
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server ./server
COPY --from=builder /app/shared ./shared

# Create directories for agent data and certificates
RUN mkdir -p /app/data /app/agents /certs

# Install additional dependencies for federated deployment
RUN apk add --no-cache \
    curl \
    openssl \
    ca-certificates \
    git

# Copy agent initialization scripts
COPY scripts/init-agents.sh ./scripts/
RUN chmod +x ./scripts/init-agents.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f https://localhost/api/health || exit 1

# Expose ports
EXPOSE 80 443

# Start script
COPY scripts/start-federated.sh ./
RUN chmod +x ./start-federated.sh

CMD ["./start-federated.sh"]