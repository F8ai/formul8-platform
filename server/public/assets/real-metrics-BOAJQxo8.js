import{u as C,t as I,r as T,m as F,v as A,j as e,C as n,a as t,b as d,q as h,d as r,T as O,i as S,k as x,l as u,f as B,c as j,P as D,K as M,B as g,R as p,Z as q,p as K,J as k}from"./index-B8YngC3q.js";import{A as f,a as v}from"./alert-B2IpRV-b.js";import{P as $}from"./play-DCfOixJ6.js";function U(){const{toast:i}=C(),N=I(),[R,E]=T.useState(""),{data:c,isLoading:y}=F({queryKey:["/api/metrics/dashboard"],refetchInterval:3e4}),o=A({mutationFn:async s=>await k(`/api/benchmarks/${s}`,{method:"POST"}),onSuccess:(s,a)=>{i({title:"Benchmark Complete",description:`${a} agent benchmark completed with ${s.successfulTests}/${s.totalTests} successful tests`}),N.invalidateQueries({queryKey:["/api/metrics/dashboard"]})},onError:s=>{const a=s.message||"Benchmark failed";a.includes("OpenAI API key")?i({title:"API Key Required",description:"OpenAI API key needed for real benchmarks. Please configure your API key.",variant:"destructive"}):i({title:"Benchmark Failed",description:a,variant:"destructive"})}}),m=A({mutationFn:async()=>await k("/api/benchmarks/all",{method:"POST"}),onSuccess:()=>{i({title:"All Benchmarks Started",description:"Running comprehensive benchmarks for all agents. Results will appear as tests complete."})},onError:s=>{const a=s.message||"Failed to start benchmarks";a.includes("OpenAI API key")?i({title:"API Key Required",description:"OpenAI API key needed for real benchmarks. Please configure your API key.",variant:"destructive"}):i({title:"Benchmarks Failed",description:a,variant:"destructive"})}}),b=[{id:"compliance",name:"Compliance Agent",icon:"🛡️",color:"bg-blue-500"},{id:"formulation",name:"Formulation Agent",icon:"🧪",color:"bg-green-500"},{id:"marketing",name:"Marketing Agent",icon:"📢",color:"bg-pink-500"},{id:"operations",name:"Operations Agent",icon:"⚙️",color:"bg-orange-500"},{id:"sourcing",name:"Sourcing Agent",icon:"🛒",color:"bg-teal-500"}],w=s=>(c==null?void 0:c[s])||null,P=c&&Object.values(c).some(s=>s.totalTests>0);return e.jsxs("div",{className:"container mx-auto px-4 py-8 max-w-7xl",children:[e.jsxs("div",{className:"mb-8",children:[e.jsx("h1",{className:"text-3xl font-bold text-formul8-text-primary mb-2",children:"Real Performance Metrics"}),e.jsx("p",{className:"text-formul8-text-secondary",children:"Authentic benchmarking data collected from actual OpenAI API calls and cannabis industry test scenarios"})]}),e.jsxs(n,{className:"mb-8 border-yellow-200 bg-yellow-50",children:[e.jsx(t,{children:e.jsxs(d,{className:"flex items-center gap-2 text-yellow-800",children:[e.jsx(h,{className:"h-5 w-5"}),"Real vs Simulated Data"]})}),e.jsx(r,{className:"text-yellow-800",children:e.jsxs("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-6",children:[e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold mb-2",children:"📊 Previous Metrics (Simulated)"}),e.jsxs("ul",{className:"text-sm space-y-1",children:[e.jsx("li",{children:"• Static placeholder values"}),e.jsx("li",{children:"• No actual API testing"}),e.jsx("li",{children:"• Fictional response times"}),e.jsx("li",{children:"• Estimated accuracy scores"})]})]}),e.jsxs("div",{children:[e.jsx("h4",{className:"font-semibold mb-2",children:"🔬 Real Metrics (This Page)"}),e.jsxs("ul",{className:"text-sm space-y-1",children:[e.jsx("li",{children:"• Actual OpenAI API calls"}),e.jsx("li",{children:"• Measured response times"}),e.jsx("li",{children:"• Quality-assessed accuracy"}),e.jsx("li",{children:"• Cannabis-specific test scenarios"})]})]})]})})]}),e.jsxs(O,{defaultValue:"dashboard",className:"space-y-6",children:[e.jsxs(S,{className:"grid w-full grid-cols-3",children:[e.jsx(x,{value:"dashboard",children:"Dashboard"}),e.jsx(x,{value:"testing",children:"Run Tests"}),e.jsx(x,{value:"setup",children:"Setup"})]}),e.jsxs(u,{value:"dashboard",className:"space-y-6",children:[!P&&e.jsxs(f,{children:[e.jsx(h,{className:"h-4 w-4"}),e.jsx(v,{children:'No real benchmark data available yet. Use the "Run Tests" tab to generate authentic performance metrics.'})]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6",children:b.map(s=>{const a=w(s.id),l=a&&a.totalTests>0;return e.jsxs(n,{className:l?"border-green-200":"border-gray-200",children:[e.jsxs(t,{className:"pb-4",children:[e.jsxs("div",{className:"flex items-center justify-between",children:[e.jsx("div",{className:`w-10 h-10 ${s.color} rounded-lg flex items-center justify-center text-white text-lg`,children:s.icon}),e.jsx(B,{variant:l?"default":"secondary",children:l?"Real Data":"No Data"})]}),e.jsx(d,{className:"text-lg",children:s.name}),e.jsx(j,{children:l?`${a.totalTests} real tests completed`:"No benchmark data available"})]}),e.jsx(r,{className:"space-y-4",children:l?e.jsxs(e.Fragment,{children:[e.jsxs("div",{className:"grid grid-cols-2 gap-4 text-sm",children:[e.jsxs("div",{children:[e.jsx("div",{className:"text-muted-foreground",children:"Success Rate"}),e.jsxs("div",{className:"font-medium",children:[a.successRate.toFixed(1),"%"]})]}),e.jsxs("div",{children:[e.jsx("div",{className:"text-muted-foreground",children:"Avg Response"}),e.jsxs("div",{className:"font-medium",children:[a.averageResponseTime.toFixed(0),"ms"]})]}),e.jsxs("div",{children:[e.jsx("div",{className:"text-muted-foreground",children:"Accuracy"}),e.jsxs("div",{className:"font-medium",children:[a.averageAccuracy.toFixed(1),"%"]})]}),e.jsxs("div",{children:[e.jsx("div",{className:"text-muted-foreground",children:"Confidence"}),e.jsxs("div",{className:"font-medium",children:[a.averageConfidence.toFixed(1),"%"]})]})]}),e.jsxs("div",{className:"space-y-2",children:[e.jsxs("div",{className:"flex justify-between text-sm",children:[e.jsx("span",{children:"Overall Performance"}),e.jsxs("span",{children:[((a.averageAccuracy+a.averageConfidence+a.successRate)/3).toFixed(1),"%"]})]}),e.jsx(D,{value:(a.averageAccuracy+a.averageConfidence+a.successRate)/3,className:"h-2"})]}),e.jsxs("div",{className:"text-xs text-muted-foreground",children:["Last updated: ",new Date(a.lastUpdated).toLocaleString()]})]}):e.jsxs("div",{className:"text-center py-8 text-muted-foreground",children:[e.jsx(M,{className:"h-8 w-8 mx-auto mb-2 opacity-50"}),e.jsx("p",{children:"Run benchmarks to see real data"})]})})]},s.id)})})]}),e.jsx(u,{value:"testing",className:"space-y-6",children:e.jsxs(n,{children:[e.jsxs(t,{children:[e.jsxs(d,{className:"flex items-center gap-2",children:[e.jsx($,{className:"h-5 w-5"}),"Run Real Benchmarks"]}),e.jsx(j,{children:"Execute actual OpenAI API calls with cannabis industry test scenarios to collect authentic performance data"})]}),e.jsxs(r,{className:"space-y-6",children:[e.jsxs("div",{className:"flex gap-4",children:[e.jsx(g,{onClick:()=>m.mutate(),disabled:m.isPending,className:"flex-1",children:m.isPending?e.jsxs(e.Fragment,{children:[e.jsx(p,{className:"h-4 w-4 mr-2 animate-spin"}),"Running All Tests..."]}):e.jsxs(e.Fragment,{children:[e.jsx(q,{className:"h-4 w-4 mr-2"}),"Run All Agent Benchmarks"]})}),e.jsxs(g,{variant:"outline",onClick:()=>N.invalidateQueries({queryKey:["/api/metrics/dashboard"]}),disabled:y,children:[e.jsx(p,{className:`h-4 w-4 mr-2 ${y?"animate-spin":""}`}),"Refresh Data"]})]}),e.jsx("div",{className:"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4",children:b.map(s=>e.jsx(n,{className:"text-center",children:e.jsxs(r,{className:"pt-6",children:[e.jsx("div",{className:`w-8 h-8 ${s.color} rounded-lg flex items-center justify-center text-white mx-auto mb-2`,children:s.icon}),e.jsx("h4",{className:"font-medium mb-2",children:s.name}),e.jsx(g,{size:"sm",variant:"outline",onClick:()=>o.mutate(s.id),disabled:o.isPending,className:"w-full",children:o.isPending&&R===s.id?e.jsxs(e.Fragment,{children:[e.jsx(p,{className:"h-3 w-3 mr-1 animate-spin"}),"Testing..."]}):"Run Test"})]})},s.id))}),e.jsxs(f,{children:[e.jsx(K,{className:"h-4 w-4"}),e.jsxs(v,{children:[e.jsx("strong",{children:"Note:"})," Real benchmarks make actual OpenAI API calls and may take 1-3 minutes per agent. Results include measured response times, accuracy assessments, and cannabis industry-specific test scenarios."]})]})]})]})}),e.jsx(u,{value:"setup",className:"space-y-6",children:e.jsxs(n,{children:[e.jsxs(t,{children:[e.jsx(d,{children:"Real Metrics Setup"}),e.jsx(j,{children:"Configure your environment for authentic performance measurement"})]}),e.jsx(r,{className:"space-y-6",children:e.jsxs("div",{className:"space-y-4",children:[e.jsx("h4",{className:"font-semibold",children:"Requirements for Real Metrics:"}),e.jsxs("div",{className:"space-y-3",children:[e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx("div",{className:"w-2 h-2 bg-green-500 rounded-full"}),e.jsx("span",{children:"OpenAI API Key (for actual model calls)"})]}),e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx("div",{className:"w-2 h-2 bg-green-500 rounded-full"}),e.jsx("span",{children:"Database connection (for storing results)"})]}),e.jsxs("div",{className:"flex items-center gap-3",children:[e.jsx("div",{className:"w-2 h-2 bg-green-500 rounded-full"}),e.jsx("span",{children:"Cannabis industry test scenarios"})]})]}),e.jsxs(f,{children:[e.jsx(h,{className:"h-4 w-4"}),e.jsxs(v,{children:[e.jsx("strong",{children:"API Key Required:"})," To run real benchmarks, you need to configure your OpenAI API key. Without it, the system will only show placeholder data."]})]}),e.jsxs("div",{className:"bg-gray-50 rounded-lg p-4",children:[e.jsx("h5",{className:"font-semibold mb-2",children:"Test Categories Include:"}),e.jsxs("ul",{className:"text-sm space-y-1 ml-4",children:[e.jsx("li",{children:"• Regulatory compliance analysis"}),e.jsx("li",{children:"• Cannabinoid ratio calculations"}),e.jsx("li",{children:"• Marketing compliance validation"}),e.jsx("li",{children:"• Operations optimization"}),e.jsx("li",{children:"• Vendor evaluation processes"})]})]})]})})]})})]})]})}export{U as default};
